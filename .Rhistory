ct
# plot figures for calls
cr <- ggplot(RealDataLarge, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 18) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.85,.85),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,5.25))
cr
# plot figures for calls
cr3 <- ggplot(RealData3Vac, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 18) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.85,.85),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,5.25))
cr3
# plot the four plots together
cowplot::plot_grid(ft,ct, fr3, cr3, fr,cr, labels = c("A", "B", "C","D","E","F"), align = "v", ncol=2, rel_widths = c(2,1))
# plot figures for fittness
fr <- ggplot(RealDataLarge, aes(y = Fitness, x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "prop. supercritical") +
theme(legend.position = 'none',axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
annotate("point", x = split4$`2`$nwTypes, y =split4$`2`$mean, colour = "steelblue", size=3, shape=18) +
annotate('segment', x = split4$`2`$nwTypes, y = split4$`2`$mean-split4$`2`$sd,
xend = split4$`2`$nwTypes, yend = split4$`2`$mean+split4$`2`$sd, size=.5, colour = "steelblue") +
annotate("point", x = split4$`1`$nwTypes-.25, y =split4$`1`$mean, colour = "grey", size=3, shape=18) +
annotate('segment', x = split4$`1`$nwTypes-.25, y = split4$`1`$mean-split4$`1`$sd,
xend = split4$`1`$nwTypes-.25, yend = split4$`1`$mean+split4$`1`$sd, size=.5, colour = "grey") +
annotate("point", x = split4$`3`$nwTypes+.25, y =split4$`3`$mean, colour = "black", size=3, shape=18) +
annotate('segment', x = split4$`3`$nwTypes+.25, y = split4$`3`$mean-split4$`3`$sd,
xend = split4$`3`$nwTypes+.25, yend = split4$`3`$mean+split4$`3`$sd, size=.5, colour = "black") +facet_zoom(ylim = c(0, .015), zoom.size=2, show.area=F)
fr
# read in our data 20 reps for four toy nworks for 2 trans values
toyData <- read.csv("toyNWdataFinal2.csv",
header = FALSE,
stringsAsFactors = FALSE)
# add names
names(toyData) <- c('Fitness', 'Func.Calls', 'Network' , "Transcendence")
# make numeric values character strings
toyData$Network <- as.factor(toyData$Network)
toyData$Transcendence <- as.character(toyData$Transcendence)
# change factor names to real names of nws
toyData$Network <- factor(toyData$Network, levels = c('1', '2', '3','4'),
labels = c('lattice', 'star', 'chain', 'E-R'))
toysplit <- split(randTDF, randTDF$Trans)
# plot figures for fittness
ft <- ggplot(toyData, aes(y = Fitness, x = Network, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "prop. supercritical") +
theme(legend.position = 'none',axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
annotate("point", x = toysplit$`2.5`$nwTypes, y =toysplit$`2.5`$mean, colour = "steelblue", size=3, shape=18) +
annotate('segment', x = toysplit$`2.5`$nwTypes, y = toysplit$`2.5`$mean-toysplit$`2.5`$sd,
xend = toysplit$`2.5`$nwTypes, yend = toysplit$`2.5`$mean+toysplit$`2.5`$sd, size=.5, colour = "steelblue") +
annotate("point", x = toysplit$`2`$nwTypes-.25, y =toysplit$`2`$mean, colour = "grey", size=3, shape=18) +
annotate('segment', x = toysplit$`2`$nwTypes-.25, y = toysplit$`2`$mean-toysplit$`2`$sd,
xend = toysplit$`2`$nwTypes-.25, yend = toysplit$`2`$mean+toysplit$`2`$sd, size=.5, colour = "grey") +
annotate("point", x = toysplit$`3`$nwTypes+.25, y =toysplit$`3`$mean, colour = "black", size=3, shape=18) +
annotate('segment', x = toysplit$`3`$nwTypes+.25, y = toysplit$`3`$mean-toysplit$`3`$sd,
xend = toysplit$`3`$nwTypes+.25, yend = toysplit$`3`$mean+toysplit$`3`$sd, size=.5, colour = "black")+
facet_zoom(ylim = c(0, .075), zoom.size=2, show.area=F)
ft
# read in our data for 20 reps of 3 trans values for 9 different nws
RealData3Vac <- read.csv("realNWdata3vac.csv",
header = FALSE,
stringsAsFactors = FALSE)
# add names
names(RealData3Vac) <- c('Fitness', 'Func.Calls', "Transcendence", 'Network.Size')
# convert to character values
RealData3Vac$Transcendence <- as.character(RealData3Vac$Transcendence)
RealData3Vac$Network.Size <- as.factor(RealData3Vac$Network.Size)
split3<-split(randRDF3, randRDF3$Trans)
# plot figures for fittness
fr3 <- ggplot(RealData3Vac, aes(y = Fitness, x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "prop. supercritical") +
theme(legend.position = 'none',axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
annotate("point", x = split3$`2`$nwTypes, y =split3$`2`$mean, colour = "steelblue", size=3, shape=20) +
annotate('segment', x = split3$`2`$nwTypes, y = split3$`2`$mean-split3$`2`$sd,
xend = split3$`2`$nwTypes, yend = split3$`2`$mean+split3$`2`$sd, size=.5, colour = "steelblue") +
annotate("point", x = split3$`1`$nwTypes-.25, y =split3$`1`$mean, colour = "grey", size=3, shape=18) +
annotate('segment', x = split3$`1`$nwTypes-.25, y = split3$`1`$mean-split3$`1`$sd,
xend = split3$`1`$nwTypes-.25, yend = split3$`1`$mean+split3$`1`$sd, size=.5, colour = "grey") +
annotate("point", x = split3$`3`$nwTypes+.25, y =split3$`3`$mean, colour = "black", size=3, shape=18) +
annotate('segment', x = split3$`3`$nwTypes+.25, y = split3$`3`$mean-split3$`3`$sd,
xend = split3$`3`$nwTypes+.25, yend = split3$`3`$mean+split3$`3`$sd, size=.5, colour = "black") +facet_zoom(ylim = c(0, .0083), zoom.size=2, show.area=F)
fr3
# plot figures for calls
ct <- ggplot(toyData, aes(y = log10(Func.Calls), x = Network, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.85,.85),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
ct
# plot figures for calls
cr <- ggplot(RealDataLarge, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.85,.85),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr
# plot figures for calls
cr3 <- ggplot(RealData3Vac, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.85,.85),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr3
# plot the four plots together
cowplot::plot_grid(ft,ct, fr3, cr3, fr,cr, labels = c("A", "B", "C","D","E","F"),
align = "v", ncol=2, rel_widths = c(2,1))
# plot figures for calls
ct <- ggplot(toyData, aes(y = log10(Func.Calls), x = Network, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.8,.8),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
ct
# plot figures for calls
cr <- ggplot(RealDataLarge, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.8,.8),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr
# plot figures for calls
cr3 <- ggplot(RealData3Vac, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.8,.8),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr3
# plot the four plots together
cowplot::plot_grid(ft,ct, fr3, cr3, fr,cr, labels = c("A", "B", "C","D","E","F"),
align = "hv", ncol=2, rel_widths = c(2,1))
# plot the four plots together
cowplot::plot_grid(ct,ft, cr3, fr3, cr,fr, labels = c("A", "B", "C","D","E","F"),
align = "hv", ncol=2, rel_widths = c(2,1))
# plot the four plots together
cowplot::plot_grid(ct,ft, cr3, fr3, cr,fr, labels = c("A", "B", "C","D","E","F"),
align = "hv", ncol=2, rel_widths = c(1,2))
# plot figures for calls
ct <- ggplot(toyData, aes(y = log10(Func.Calls), x = Network, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.75,.75),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
ct
# plot figures for calls
cr <- ggplot(RealDataLarge, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.75,.75),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr
# plot figures for calls
cr3 <- ggplot(RealData3Vac, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.75,.75),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr3
# plot the four plots together
cowplot::plot_grid(ct,ft, cr3, fr3, cr,fr, labels = c("A", "B", "C","D","E","F"),
align = "hv", ncol=2, rel_widths = c(1,2))
# plot the four plots together
cowplot::plot_grid(ct,ft, cr3, fr3, cr,fr, labels = c("A", "B", "C","D","E","F"),
align = "hv", ncol=2, rel_widths = c(1,2))
# plot figures for calls
ct <- ggplot(toyData, aes(y = log10(Func.Calls), x = Network, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.7,.7),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
ct
# plot figures for calls
cr <- ggplot(RealDataLarge, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.7,.7),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr
# plot figures for calls
cr3 <- ggplot(RealData3Vac, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.7,.7),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr3
# plot the four plots together
cowplot::plot_grid(ct,ft, cr3, fr3, cr,fr, labels = c("A", "B", "C","D","E","F"),
align = "hv", ncol=2, rel_widths = c(1,2))
# plot figures for calls
ct <- ggplot(toyData, aes(y = log10(Func.Calls), x = Network, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.73,.73),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
ct
# plot figures for calls
cr <- ggplot(RealDataLarge, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.73,.73),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr
# plot figures for calls
cr3 <- ggplot(RealData3Vac, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.73,.73),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr3
# plot the four plots together
cowplot::plot_grid(ct,ft, cr3, fr3, cr,fr, labels = c("A", "B", "C","D","E","F"),
align = "hv", ncol=2, rel_widths = c(1,2))
# plot figures for calls
ct <- ggplot(toyData, aes(y = log10(Func.Calls), x = Network, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.74,.74),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
ct
# plot figures for calls
cr <- ggplot(RealDataLarge, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.74,.74),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr
# plot figures for calls
cr3 <- ggplot(RealData3Vac, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.74,.74),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr3
# plot the four plots together
cowplot::plot_grid(ct,ft, cr3, fr3, cr,fr, labels = c("A", "B", "C","D","E","F"),
align = "hv", ncol=2, rel_widths = c(1,2))
# plot figures for calls
ct <- ggplot(toyData, aes(y = log10(Func.Calls), x = Network, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.75,.75),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
ct
# plot figures for calls
cr <- ggplot(RealDataLarge, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.75,.75),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr
# plot figures for calls
cr3 <- ggplot(RealData3Vac, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.75,.75),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr3
# plot the four plots together
cowplot::plot_grid(ct,ft, cr3, fr3, cr,fr, labels = c("A", "B", "C","D","E","F"),
align = "hv", ncol=2, rel_widths = c(1,2))
# plot figures for calls
ct <- ggplot(toyData, aes(y = log10(Func.Calls), x = Network, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.74,.74),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
ct
# plot figures for calls
cr <- ggplot(RealDataLarge, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.74,.74),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr
# plot figures for calls
cr3 <- ggplot(RealData3Vac, aes(y = log10(Func.Calls), x = Network.Size, fill = Transcendence)) +
geom_boxplot() +
theme_light(base_size = 20) +
labs(x=NULL, y = "log10(func. calls)") +
theme(legend.position = c(.74,.74),axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'steelblue', 'black'), name = "Trans:") +
coord_cartesian(ylim = c(2.25,6))
cr3
# plot the four plots together
cowplot::plot_grid(ct,ft, cr3, fr3, cr,fr, labels = c("A", "B", "C","D","E","F"),
align = "hv", ncol=2, rel_widths = c(1,2))
# plot the four plots together
cowplot::plot_grid(ct,ft, cr3, fr3, cr,fr, labels = c("A", "B", "C","D","E","F"),
align = "hv", ncol=2, rel_widths = c(1,2))
growData <- read.csv("growMat.csv",
header = FALSE,
stringsAsFactors = FALSE)
colnames(growData) <- c("days", rep.int("Random", 1800), rep.int("GA", 10), "Max")
growData <- pivot_longer(growData,
-contains("days"),
names_to = "group",
values_to = "fitness") %>%
filter(days != 270 & days != 450)
growData$days <- as.factor(growData$days)
gr <- ggplot(growData, aes(y = fitness, x = days, fill = group)) +
geom_boxplot() +
theme_minimal(base_size = 18) +
labs(x = "Days after vaccine selection",
y = "Fitness") +
theme(legend.position = 'top',axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'black', 'steelblue'), name = "")
gr
gr <- ggplot(growData, aes(y = fitness, x = days, fill = group)) +
geom_boxplot() +
theme_minimal(base_size = 18) +
labs(x = "Days after vaccine selection",
y = "Fitness") +
theme(legend.position = 'top',axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'black', 'steelblue'), name = "")
gr
growData <- read.csv("growMat.csv",
header = FALSE,
stringsAsFactors = FALSE)
colnames(growData) <- c("days", rep.int("Random", 1800), rep.int("GA", 10), "Max")
growData
growData <- pivot_longer(growData,
-contains("days"),
names_to = "group",
values_to = "fitness") %>%
filter(days != 270 & days != 450)
library(tidyr)
growData <- pivot_longer(growData,
-contains("days"),
names_to = "group",
values_to = "fitness") %>%
filter(days != 270 & days != 450)
growData <- tidyr::pivot_longer(growData,
-contains("days"),
names_to = "group",
values_to = "fitness") %>%
filter(days != 270 & days != 450)
update.packages('tidyr')
# growing network analysis, ga v. rand -----------------------------------------
library(tidyr)
growData <- read.csv("growMat.csv",
header = FALSE,
stringsAsFactors = FALSE)
colnames(growData) <- c("days", rep.int("Random", 1800), rep.int("GA", 10), "Max")
growData <- tidyr::pivot_longer(growData,
-contains("days"),
names_to = "group",
values_to = "fitness") %>%
filter(days != 270 & days != 450)
install.packages('tidyverse')
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
growData <- pivot_longer(growData,
-contains("days"),
names_to = "group",
values_to = "fitness") %>%
filter(days != 270 & days != 450)
# growing network analysis, ga v. rand -----------------------------------------
library(tidyr)
growData <- read.csv("growMat.csv",
header = FALSE,
stringsAsFactors = FALSE)
colnames(growData) <- c("days", rep.int("Random", 1800), rep.int("GA", 10), "Max")
growData <- pivot_longer(growData,
-contains("days"),
names_to = "group",
values_to = "fitness") %>%
filter(days != 270 & days != 450)
growData <- pivot_longer(growData,
-contains("days"),
names_to = "group",
values_to = "fitness") %>% filter(days != 270 & days != 450)
library(dplyr)
library(dplyr)
install.packages('dplyr')
install.packages("dplyr")
library(dplyr)
library(ggplot2)
library(scales)
library(cowplot)
library(latex2exp)
library(plyr)
library(ggforce)
library(matrixStats)
##############################################################################################
# read in random data for toy networks
randToyMat <- read.csv("randToyMat.csv",
header = FALSE,
stringsAsFactors = FALSE)
# make a matrix
randToyMat <- as.matrix(randToyMat)
# summary as dataframe
randTDF <- data.frame(randToyMat[,c(1:2)],
rowMeans(randToyMat[,c(3:1002)]),
rowSds(randToyMat[,c(3:1002)])/sqrt(1000))
# add names to dataframe
names(randTDF) <- c('nwTypes', 'Trans', "mean", 'sd')
##############################################################################################
# read in random data for toy networks
randRealMat3 <- read.csv("randRealMat3.csv",
header = FALSE,
stringsAsFactors = FALSE)
# make a matrix
randRealMat3 <- as.matrix(randRealMat3)
# summary as dataframe
randRDF3 <- data.frame(randRealMat3[,c(1:2)],
rowMeans(randRealMat3[,c(3:1002)]),
rowSds(randRealMat3[,c(3:1002)])/sqrt(1000))
# add names to dataframe
names(randRDF3) <- c('nwTypes', 'Trans', "mean", 'sd')
randRDF3<-randRDF3[!(randRDF3$nwTypes %in% c(7, 8, 9)),]
randRDF3$nwTypes <- rep(6:1,3)
##############################################################################################
# read in random data for toy networks
randRealMat4 <- read.csv("randRealMat4.csv",
header = FALSE,
stringsAsFactors = FALSE)
# make a matrix
randRealMat4 <- as.matrix(randRealMat4)
# summary as dataframe
randRDF4 <- data.frame(randRealMat4[,c(1:2)],
rowMeans(randRealMat4[,c(3:1002)]),
rowSds(randRealMat4[,c(3:1002)])/sqrt(1000))
# add names to dataframe
names(randRDF4) <- c('nwTypes', 'Trans', "mean", 'sd')
randRDF4<-randRDF4[!(randRDF4$nwTypes %in% c(7, 8, 9)),]
randRDF4$nwTypes <- rep(6:1,3)
# read in our data for 20 reps of 3 trans values for 9 different nws
RealData <- read.csv("realNWdata4vac.csv",
header = FALSE,
stringsAsFactors = FALSE)
# growing network analysis, ga v. rand -----------------------------------------
library(tidyr)
growData <- read.csv("growMat.csv",
header = FALSE,
stringsAsFactors = FALSE)
colnames(growData) <- c("days", rep.int("Random", 1800), rep.int("GA", 10), "Max")
growData <- pivot_longer(growData,
-contains("days"),
names_to = "group",
values_to = "fitness") %>% filter(days != 270 & days != 450)
%>% filter(days != 270 & days != 450)
growData$days <- as.factor(growData$days)
gr <- ggplot(growData, aes(y = fitness, x = days, fill = group)) +
geom_boxplot() +
theme_minimal(base_size = 18) +
labs(x = "Days after vaccine selection",
y = "Fitness") +
theme(legend.position = 'top',axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c('grey', 'black', 'steelblue'), name = "")
gr
library(ggplot2)
